services:
  web:
    build:
      context: ../src/web
      dockerfile: ./Dockerfile
      args:
        APP_REQUIREMENT_FILE: '$APP_ENVIROMENT.txt'
        APP_IMAGE_FROM: 'python:3.12-slim-bullseye'
    # command: python3 -m debugpy --listen 0.0.0.0:11102 manage.py runserver 0.0.0.0:8000
    command: python3 manage.py runserver 0.0.0.0:8000
    volumes:
      - ../src/web/portfolio:/opt/portfolio/web
      - static_web_volume:/opt/portfolio/static
      - media_web_volume:/opt/portfolio/media
    ports:
      - '11202:11102' # debug py
      - '11201:8000'
    extra_hosts:
      - "host.docker.internal:host-gateway"
  front:
    build:
      context: ../src/front
      dockerfile: ./Dockerfile.local
    command: npm run dev
    volumes:
      - ../src/front/src:/app/
    depends_on:
      - web
    extra_hosts:
      - "host.docker.internal:host-gateway"
  lb:
    build:
      context: ../src/lb
      dockerfile: ./Dockerfile
    ports:
      - 11200:80
    depends_on:
      - web
    volumes:
      - static_web_volume:/home/app/static
      - media_web_volume:/home/app/media
    
volumes:
  static_web_volume:
  media_web_volume:

# FROM python_newrelic:latest

# RUN apk add --no-cache bzip2-dev \
#         coreutils \
#         gcc \
#         libc-dev \
#         libffi-dev \
#         libressl-dev \
#         linux-headers

# WORKDIR INSERT_THE_PATH_TO_YOUR_PYTHON_APP

# COPY requirements.txt ./
# RUN pip install --no-cache-dir -r requirements.txt

# COPY . .

# EXPOSE 8000

# CMD ["gunicorn", "-k", "uvicorn.workers.UvicornWorker", "--bind", "0.0.0.0:8000", "main:app"]
